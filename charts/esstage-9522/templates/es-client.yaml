apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-client
  labels:
    snappyflow/compname: esstage
    snappyflow/appname: test-es-stage
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "fullname" . }}
    role: client
spec:
  replicas: {{ .Values.client.replicas }}
  template:
    metadata:
      labels:
        snappyflow/compname: esstage
        snappyflow/appname: test-es-stage
        release: "{{ .Release.Name }}"
        component: {{ template "fullname" . }}
        role: client
        service: ES
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- if eq .Values.client.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: client
      {{- else if eq .Values.client.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: client
      {{- end }}
      initContainers:
      - name: init-sysctl
        image: "{{ .Values.image.init.repository }}:{{ .Values.image.init.tag }}"
        imagePullPolicy: {{ .Values.image.init.pullPolicy }}
        command: ["sh", "-c", "sysctl -w vm.max_map_count=262144 && mkdir -p /var/log/elasticsearch && chmod 777 /var/log/elasticsearch"]
        securityContext:
          privileged: true
        volumeMounts:
          - name: varlog
            mountPath: /var/log
      containers:
      - name: es-client
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: "{{ .Values.image.es.repository }}:{{ .Values.image.es.tag }}"
        imagePullPolicy: {{ .Values.image.es.pullPolicy }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: {{ template "fullname" . }}-discovery
        {{- range $key, $value :=  .Values.common.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.client.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        - name: "ES_JAVA_OPTS"
          value: "-Xms{{ .Values.client.heapMemory }} -Xmx{{ .Values.client.heapMemory }}"
        resources:
{{ toYaml .Values.client.resources | indent 10 }}
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 9300
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 20
          timeoutSeconds: 5
        volumeMounts:
        - name: storage
          mountPath: /data
        - name: logconfig
          mountPath: /elasticsearch/config/log4j2.properties
          subPath: log4j2.properties
        - name: varlog
          mountPath: /var/log
      {{- if .Values.logger.enabled }}
      - name: {{ template "fullname" . }}-client-logger
        image:  "{{ .Values.logger.image }}:{{ .Values.logger.imageTag }}"
        imagePullPolicy: {{ .Values.logger.imagePullPolicy | quote }}
        env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: FLUENTD_FORWARD_HOST
          value: "{{ .Values.logger.fluentd_server_host }}"
        - name: FLUENTD_FORWARD_PORT
          value: "{{ .Values.logger.fluentd_server_port }}"
        - name: DEEPINSIGHT_APPLICATION_NAME
          value: {{ .Release.Name }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: libsystemddir
          mountPath: /host/lib
          readOnly: true
        - name: varlog
          mountPath: /var/log
        - name: {{ template "fullname" . }}-logger-conf
          mountPath: /etc/fluent/config.d
{{- end }}
      volumes:
        - emptyDir:
            medium: ""
          name: "storage"
        - name: logconfig
          configMap:
            name: {{ template "fullname" . }}
        - name: varlog
          emptyDir: {}
        - name: libsystemddir
          hostPath:
            path: /usr/lib64
        - name: {{ template "fullname" . }}-logger-conf
          configMap:
            name: {{ template "fullname" . }}-logger-conf
